syntax = "proto3";
package chain4energy.c4echain.cfevesting;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cfevesting/params.proto";
import "cfevesting/vesting_types.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
import "cfevesting/genesis.proto";

// this line is used by starport scaffolding # 1

option go_package = "github.com/chain4energy/c4e-chain/x/cfevesting/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/c4e/vesting/params";
  }
  // Queries a list of VestingType items.
	rpc VestingType(QueryVestingTypeRequest) returns (QueryVestingTypeResponse) {
		option (google.api.http).get = "/c4e/vesting/vesting_type";
	}

// Queries a list of Vesting items.
	rpc VestingPools(QueryVestingPoolsRequest) returns (QueryVestingPoolsResponse) {
		option (google.api.http).get = "/c4e/vesting/vesting_pools/{address}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryVestingTypeRequest {
}

message QueryVestingTypeResponse {

  repeated GenesisVestingType vesting_types = 2 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"vesting_types\""];
}

message QueryVestingPoolsRequest {
  string address = 1;
}

message QueryVestingPoolsResponse {
  string delegable_address = 1 [(gogoproto.moretags) = "yaml:\"delegable_address\""];
  repeated VestingPoolInfo vesting_pools = 2; 
}

message VestingPoolInfo {
  int32 id = 1;
  string name = 2;
  string vesting_type = 3;
  google.protobuf.Timestamp lock_start = 4 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  google.protobuf.Timestamp lock_end = 5 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  // google.protobuf.Timestamp vesting_end = 5 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  string withdrawable = 6;
  // bool delegation_allowed = 7;
  cosmos.base.v1beta1.Coin vested = 7;
  string current_vested_amount = 8;
  string sent_amount = 9;
}

// this line is used by starport scaffolding # 3
